% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_mcbdsc.R
\name{plot_mcbdsc}
\alias{plot_mcbdsc}
\title{Miscalibration-Discrimination Plot}
\usage{
plot_mcbdsc(
  decomp,
  n_isolines = 10,
  colour_values = "black",
  colour_unc = "#00BF7D",
  MCBDSC_repel = FALSE,
  MCB_lim = NA,
  DSC_lim = NA
)
}
\arguments{
\item{decomp}{A dataframe or list containing the decomposition terms.}

\item{n_isolines}{The number of isolines showing average scores.}

\item{colour_values}{A colour specification passed to the `values` argument
of `scale_colour_manual()`. Recycled if length 1.}

\item{colour_unc}{A colour specification highlighting the UNC component layers.}

\item{MCBDSC_repel}{A logical specifying whether labels should be placed by the `ggrepel` package.}

\item{MCB_lim}{The plot limits for the x-axis (the MCB component).}

\item{DSC_lim}{The plot limits for the y-axis (the DSC component).}
}
\value{
The proportion of prediction intervals that are comparable (i.e. ordered).
}
\description{
Plot the miscalibration and discrimination ability of prediction methods, as
calculated from score decompositions. The average score, as well as the forecast
uncertainty, are also displayed.
}
\details{
The \code{plot_mcbdsc()} function is an adaptation of the \code{autoplot.triptych_mcbdsc()}
function in the `triptych` package.

One way to visualise the output of score decompositions is to plot the
estimated miscalibration against the estimated discrimination. This can be done
for multiple prediction methods simultaneously. These so-called
\emph{miscalibration-discrimination plots} (or MCB-DSC plots) allow practitioners to compare
forecasters via their average score (using isolines on the plot),
whilst simultaneously analysing their calibration and information content.

\code{decomp} should be a dataframe with \code{decomp$UNC} containing the uncertainty
terms of the score decompositions, \code{decomp$DSC} containing the discrimination terms,
\code{decomp$MCB} the miscalibration terms, and \code{decomp$forecast} containing labels
for the different prediction models.
Alternatively, \code{decomp} can be a list of named vectors with \code{UNC}, \code{DSC},
and \code{MCB} components. In this case, the list is automatically converted into a dataframe
of the above form, with the names of the list used as the labels for the different prediction
models. This list format works easily with the ouput of \code{\link{is_decomp}}, for example.

\code{n_isolines} is the number of isolines shown on the plot, showing the average score
for different combinations of miscalibration and discrimination. This should be a single integer.

\code{colour_values} should be a vector of colours, with length equal to the number of
prediction models (i.e. \code{nrow(decomp)}). If only one colour is provided, then
this is used for all methods.

\code{colour_unc} should be a single colour. This corresponds to the colour used to
display the uncertainty term of the score decomposition.

\code{MCBDSC_repel} should be a single logical. The default is \code{FALSE}, in which
case labels are not placed using the `ggrepel` package.

\code{MCB_lim} and \code{DSC_lim} should be vectors of length two, containing the
lower and upper bounds of the x- and y-axes respectively. If only a single value is
given, then this is assumed to be the upper bound, with zero taken as the lower bound.
}
\section{References}{


Dimitriadis, T., Gneiting, T., Jordan, A. I., & Vogel, P. (2024):
`Evaluating probabilistic classifiers: The triptych.'
\emph{International Journal of Forecasting}, 40, 1101-1122.
}

\examples{
\dontrun{
n <- 1000 # sample size
alpha <- 0.1 # 90\% prediction intervals
mu <- rnorm(n)
y <- rnorm(n, mean = mu, sd = 1) # simulate observations

# Ideal forecaster: F = N(mu, 1)
L_id <- qnorm(alpha/2, mu)
U_id <- qnorm(1 - alpha/2, mu)
int_id <- data.frame(Lower = L_id, Upper = U_id)

out_iso <- is_decomp(y, int_id, level = 1 - alpha) # isotonic decomposition
out_lin <- is_decomp(y, int_id, level = 1 - alpha, method = "linear") # linear decomposition

plot_mcbdsc(list(Isotonic = out_iso, Linear = out_lin), MCB_lim = out_iso[1], DSC_lim = out_iso[1])
}

}
\seealso{
\code{\link{is_decomp}}
}
